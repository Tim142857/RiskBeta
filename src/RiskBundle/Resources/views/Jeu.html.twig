{% extends "RiskBundle::Layout.html.twig" %}
{% block body %}

    {#    {% set width=6 %}
        {% set height=6 %}#}

    <form method='POST' action='{{ url('addSoldiers') }}' id='formAddSoldiers'>
        <input type='hidden' id='newAddSoldiers' name="stringNewSlots" value=''>
    </form>

    <table class="table" id="stats">
        <tr>
            <th>Joueur</th>
            <th>Symbole</th>
            <th>Couleur</th>
            <th>Cases</th>
            <th>Soldats</th>
        </tr>
        <tr id="player1">
            <td class="name-player">{{ player1.getName() }}</td>
            <td><img alt="symbolePlayer1" src="{{ asset('bundles/risk/images/'~player1.getSymbol()) }}" style="width:20px; height:20px;"></td>
            <td style="background-color:{{ player1.getColor() }}"></td>
            <td class="boxes-player">{{ player1.getNbBoxes() }}</td>
            <td class="slots-player">{{ player1.getNbSoldiers() }}</td>
        </tr>
        <tr id="player2">
            <td class="name-player">{{ player2.getName() }}</td>
            <td><img alt="symbolePlayer1" src="{{ asset('bundles/risk/images/'~player2.getSymbol()) }}" style="width:20px; height:20px;"></td>
            <td style="background-color:{{ player2.getColor() }}"></td>
            <td class="boxes-player">{{ player2.getNbBoxes() }}</td>
            <td class="slots-player">{{ player2.getNbSoldiers() }}</td>
        </tr>
        <tr id="player0">
            <td class="name-player">{{ player0.getName() }}</td>
            <td><img alt="symbolePlayer1" src="{{ asset('bundles/risk/images/'~player0.getSymbol()) }}" style="width:20px; height:20px;"></td>
            <td style="background-color:{{ player0.getColor() }}"></td>
            <td class="boxes-player">{{ player0.getNbBoxes() }}</td>
            <td class="slots-player">{{ player0.getNbSoldiers() }}</td>
        </tr>        
    </table>
    <div id="imgSlide"><img  src="{{ asset('bundles/risk/images/flecheBas.png') }}" alt="imgSlide"></div>

    <div class="messageTour">
        <p>
        </p>
    </div>
    <div class="messageUser">
        <p>
        </p>
    </div>
    <form id="formFinTour" role="form" method='POST' action="{{ url('lancement') }}">
        <div class="form-group">
            <input type="hidden" class="form-control" id="actualPlayer" value="{{ mode.getPlayer().getId() }}">
            <input type="hidden" class="form-control" id="actualPlayer" value="{{ mode.getValue() }}">
        </div>
        <button type="submit" class="btn btn-default">Fin de tour</button>
    </form>



    {{ html|raw }}

    <script>
        $(document).ready(function () {

            var modeValue = '{{ mode.getValue() }}';
        {#            alert(modeValue);#}
                var modePlayer = '{{ mode.getPlayer().getName() }}';
                var playerSymbol = '{{ mode.getPlayer().getSymbol() }}';
                var caseAttaquante = '';
                var caseAttaquee = '';
                var width = parseInt('{{ mode.getPlayer().getGame().getWidth() }}');
                var height = parseInt('{{ mode.getPlayer().getGame().getHeight() }}');

                var tour = 'Tour du joueur ' + modePlayer;
                $('.messageTour').find('p').text(tour);

                if (modeValue === "selection") {

                    $('body').on("click", "td .slot", function () {
                        console.log('debut traitement click');
        {#        console.log('case attaquant: ' + caseAttaquante);#}
        {#        console.log('case attaquee: ' + caseAttaquee);#}
                        $('.messageUser').find('p').text('');
                        //Enregistrement des cases selectionnées
                        if ($(this).data('player') === modePlayer) {
                            if ($(this).closest('table').find('.slot[data-free="' + 'full' + '"]').length > 1) {//Verification que la case comporte plus d'un soldat
                                $('.case').each(function () {
                                    $(this).removeClass('selectionne');
                                });
                                caseAttaquante = $(this).data('idcase');
                                //Surbrillance de la case selectionnée
                                $(this).closest('.case').addClass('selectionne');
                            } else {
                                $('.messageUser').find('p').text('Vous devez sélectionner une case comportant plus d\'un soldat');
                            }

                        } else {
                            if (caseAttaquante !== '') {//S'il a bien selectionne sa premiere case
                                caseAttaquee = $(this).data('idcase');
                                //Verif si la case est adjacente
                                if (verifCaseCorrecte()) {
                                    $(this).closest('.case').addClass('selectionne');
                                    attaque(caseAttaquante, caseAttaquee);

                                } else {
                                    $('.messageUser').find('p').text('Vous devez sélectionner une case avec une frontière commune à la votre');
                                }
                            } else {
                                $('.messageUser').find('p').text('Vous devez commencer par sélectionner une de vos cases');
                            }
                        }
                    }
                    );
                } else {
                    var count = $('.case[data-player="' + modePlayer + '"]').length;
                    var newSoldats = 0;
                    var stringNewSlots = '';
                    var arrayNewSlots = [];
                    //Passage au dessu d'un slot= zoom si case appartient au joueur
                    $('.slot').on("mouseover", function () {
                        if ($(this).data('player') === modePlayer) {
                            $(this).find('img').width('20px');
                            $(this).find('img').height('20px');
                        }
                    })
                            .on("mouseleave", function () {
                                $(this).find('img').width('15px');
                                $(this).find('img').height('15px');
                            });

                    $('body').on("click", ".slot", function () {
                        if ($(this).data('player') === modePlayer && !$(this).hasClass("checked") && $(this).data('free') !== "full") {
                            stringNewSlots += $(this).data('numslot') + '/';
                            newSoldats = newSoldats + 1;
                            $(this).find('img').attr('src', '{{ asset('bundles/risk/images/') }}' + playerSymbol);
                            if (newSoldats === count) {
                                //J'enleve le dernier slash
                                stringNewSlots = stringNewSlots.substring(0, stringNewSlots.length - 1);

                                //Envoi form avec new SLots
                                $('#newAddSoldiers').val(stringNewSlots);
                                $('#formAddSoldiers').submit();
                            }
                            $(this).addClass("checked");
                        }
                    });
                }

                $("#stats td").hide();
                $('#imgSlide').on("click", function () {
                    if ($("#stats td").is(":hidden")) {
                        $("#stats td").slideDown("slow");
                        $("#imgSlide img").attr('src', '{{ asset('bundles/risk/images/flecheHaut.png') }}');
                    } else {
                        $("#stats td").slideUp("slow");
                        $("#imgSlide img").attr('src', '{{ asset('/bundles/risk/images/flecheBas.png') }}');
                    }
                });

                var attaque = function () {
                    $.ajax({
                        type: 'POST',
                        url: '{{ url('attaque') }}',
                        dataType: 'json',
                        data: 'caseAttaquante=' + caseAttaquante + '&caseAttaquee=' + caseAttaquee,
                        success: function (data) {
                            console.log('ajax effectué');
                            //Reinitialisation des cases
                            caseAttaquante = '';
                            caseAttaquee = '';
                            console.log('attaquant: ' + caseAttaquante);
                            console.log('defenseur: ' + caseAttaquee);
                            $.ajax({
                                type: 'POST',
                                url: '{{ url('reloadGrille') }}',
                                dataType: 'json',
                                data: 'noParameter',
                                success: function (data) {
                                    console.log('reloadGrille...');
                                    $('.grille').remove();
                                    var newGrille = data.grilleHTML;
                                    console.log('chargement new grille');
                                    $('#formFinTour').after(newGrille);
                                    $('#player0').find('.boxes-player').text(data.player0.nbBoxes);
                                    $('#player1').find('.boxes-player').text(data.player1.nbBoxes);
                                    $('#player2').find('.boxes-player').text(data.player2.nbBoxes);

                                    $('#player0').find('.slots-player').text(data.player0.nbSlots);
                                    $('#player1').find('.slots-player').text(data.player1.nbSlots);
                                    $('#player2').find('.slots-player').text(data.player2.nbSlots);

                                    //Verification de victoire
                                    if (data.player1.nbSlots == 0) {
                                        alert('Le joueur 2 a gagné!');
                                    }
                                    if (data.player2.nbSlots == 0) {
                                        alert('Le joueur 1 a gagné!');
                                    }
                                }
                            });
                        }
                    });
                };

                var verifCaseCorrecte = function () {
                    var numCaseAttaquante = $('.case').find("[data-idcase='" + caseAttaquante + "']").data('numcase');
                    var numCaseAttaquee = $('.case').find("[data-idcase='" + caseAttaquee + "']").data('numcase');
                    var ecartCase = numCaseAttaquante - numCaseAttaquee;
                    console.log('numCaseAttaquante :' + numCaseAttaquante);
                    console.log('numCaseAttaquee: ' + numCaseAttaquee);
                    console.log('ecart case: ' + ecartCase);
                    //Je gere les cas ou case attaquante n est pas sur une bordure
                    if (numCaseAttaquante > width && numCaseAttaquante < (width * height - width) && numCaseAttaquante % width !== 0 && (numCaseAttaquante - 1) % width !== 0) {
                        console.log('case pas sur bordure');
                        if (ecartCase === width || ecartCase === (width * -1) || ecartCase === 1 || ecartCase === -1) {
                            return true;
                        } else {
                            return false;
                        }
                    } else if (numCaseAttaquante <= width && numCaseAttaquante % width !== 0 && (numCaseAttaquante - 1) % width !== 0) {//Si la case attaquante est sur la première ligne
                        console.log('case premiere ligne');
                        if (ecartCase === (width * -1) || ecartCase === 1 || ecartCase === -1) {
                            return true;
                        } else {
                            return false;
                        }
                    } else if (numCaseAttaquante > (width * height - width) && numCaseAttaquante % width !== 0 && (numCaseAttaquante - 1) % width !== 0) {//Si la case attaquante est sur la derniere ligne
                        console.log('case derniere ligne');
                        if (ecartCase === width || ecartCase === 1 || ecartCase === -1) {
                            return true;
                        } else {
                            return false;
                        }
                    } else if (numCaseAttaquante % width === 0) {//Si la case est sur la bordure droite
                        console.log('case bordure droite');
                        console.log(ecartCase === (width * -1));
                        console.log(ecartCase === (width));
                        if (ecartCase === (width * -1) || ecartCase === width || ecartCase === 1) {
                            return true;
                        } else {
                            return false;
                        }
                    } else {//Si la case est sur la bordure gauche
                        console.log('case bordure gauche');
                        if (ecartCase === (width * -1) || ecartCase === width || ecartCase === -1) {
                            return true;
                        } else {
                            return false;
                        }
                    }
                };
            });
    </script>

{% endblock %}
